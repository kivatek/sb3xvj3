plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
    id 'org.siouan.frontend-jdk11' version '6.0.0'
}

group = 'com.kivatek'
version = ''
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.session:spring-session-jdbc:3.0.0'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'com.google.guava:guava:31.1-jre'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

frontend {
    nodeVersion = '18.13.0'
    nodeInstallDirectory = file("${projectDir}/webapp/node")
    packageJsonDirectory = file("${projectDir}/webapp")
    assembleScript = 'run build'
    cleanScript = 'run clean'
    checkScript = 'run check'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar.configure {
    shouldRunAfter assembleFrontend
}
